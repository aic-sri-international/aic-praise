<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2013, SRI International All rights reserved. Licensed
	under the The BSD 3-Clause License; you may not use this file except in compliance
	with the License. You may obtain a copy of the License at: http://opensource.org/licenses/BSD-3-Clause
	Redistribution and use in source and binary forms, with or without modification,
	are permitted provided that the following conditions are met: Redistributions
	of source code must retain the above copyright notice, this list of conditions
	and the following disclaimer. Redistributions in binary form must reproduce
	the above copyright notice, this list of conditions and the following disclaimer
	in the documentation and/or other materials provided with the distribution.
	Neither the name of the aic-praise nor the names of its contributors may
	be used to endorse or promote products derived from this software without
	specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
	HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
	BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
	FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
	HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
	EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
	OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
	INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
	STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
	ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
	OF SUCH DAMAGE. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<name>AIC-PRAiSE</name>
	<version>1.3.4-SNAPSHOT</version>
	<groupId>com.googlecode.aic-praise</groupId>
	<artifactId>aic-praise</artifactId>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<repositories>
	  <repository>
	    <id>jcenter</id>
	    <name>JFrog Maven Repository</name>
	    <layout>default</layout>
	    <url>https://jcenter.bintray.com/</url>
	    <snapshots>
	      <enabled>false</enabled>
	    </snapshots>
	  </repository>
	</repositories>

	<packaging>jar</packaging>
	<description>SRI International's AIC PRAiSE (Probabilistic Reasoning As Symbolic Evaluation) Library (for Java 11+)</description>
	<url>https://www.github.com/aic-sri-international/aic-praise</url>
	<licenses>
		<license>
			<name>New BSD License</name>
			<url>http://opensource.org/licenses/BSD-3-Clause</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<url>https://www.github.com/aic-sri-international/aic-praise</url>
		<connection>scm:git:https://www.github.com/aic-sri-international/aic-praise.git</connection>
		<developerConnection>scm:git:https://www.github.com/aic-sri-international/aic-praise.git</developerConnection>
	</scm>
	<developers>
		<developer>
			<id>rodrigobraz</id>
			<name>Rodrigo de Salvo Braz</name>
			<email>rodrigobraz@gmail.com</email>
		</developer>
		<developer>
			<id>ctjoreilly</id>
			<name>Ciaran O'Reilly</name>
			<email>ctjoreilly@gmail.com</email>
		</developer>
	</developers>

	<properties>
		<dl4j.version>1.0.0-beta4</dl4j.version>
		<jackson-2-version>2.9.5</jackson-2-version>
		<target.jdk.version>11</target.jdk.version>
		<targetJdk>11</targetJdk>
		<kotlin.version>1.3.72</kotlin.version>
		<aic.expresso.version>1.3.4-SNAPSHOT</aic.expresso.version>
		<antlr.version>4.7.2</antlr.version>
		<javafx.version>11.0.2</javafx.version>

		<!-- Older versions that compile but do not run under Java 9 --> 
		<fontawesomefx.version>8.3</fontawesomefx.version>
		<controlsfx.version>8.20.8</controlsfx.version>
		<richtextfx.version>0.6.10</richtextfx.version>

		<!-- newer versions that break the code 
		<fontawesomefx.version>9.1.2</fontawesomefx.version>
		<controlsfx.version>11.0.1</controlsfx.version>
		<richtextfx.version>0.10.4</richtextfx.version>
		-->
		
		<junit.version>5.6.2</junit.version>

		<!-- So the plain text output files generated by the maven-surefire-plugin
			are platform independent. -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<!-- Internal Dependencies -->
		<!-- Compile Dependencies -->

		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib-jdk8</artifactId>
			<version>${kotlin.version}</version>
		</dependency>

		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-core</artifactId>
			<version>${dl4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.nd4j</groupId>
			<artifactId>nd4j-native-platform</artifactId>
			<version>${dl4j.version}</version>
		</dependency>


		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${javafx.version}</version>
		</dependency>

		<!--  JavaFX-related libraries that had to be updated to run with Java 11
		      but break the code. fontawesomefx in particular seems abandoned.
		      So I am keeping the Java 8 versions here so the code compiles even though it does not work.
		      I am also keeping the new versions commented out in case I have time to try to fix this.
		 -->
		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx</artifactId>
			<version>${fontawesomefx.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>${controlsfx.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.fxmisc.richtext</groupId>
			<artifactId>richtextfx</artifactId>
			<version>${richtextfx.version}</version>
			<scope>compile</scope>
		</dependency>

<!-- 
		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-commons</artifactId>
			<version>${fontawesomefx.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-controls</artifactId>
			<version>${fontawesomefx.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-fontawesome</artifactId>
			<version>4.7.0-9.1.2</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-materialicons</artifactId>
			<version>2.2.0-9.1.2</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-icons525</artifactId>
			<version>4.2.0-9.1.2</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-weathericons</artifactId>
			<version>2.0.10-9.1.2</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-materialdesignfont</artifactId>
			<version>2.0.26-9.1.2</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-octicons</artifactId>
			<version>4.3.0-9.1.2</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-emojione</artifactId>
			<version>3.1.1-9.1.2</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-materialstackicons</artifactId>
			<version>2.1-5-9.1.2</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>${controlsfx.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.fxmisc.richtext</groupId>
			<artifactId>richtextfx</artifactId>
			<version>${richtextfx.version}</version>
			<scope>compile</scope>
		</dependency>
-->

		<dependency>
			<groupId>com.googlecode.aic-expresso</groupId>
			<artifactId>aic-expresso</artifactId>
			<version>${aic.expresso.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4-runtime</artifactId>
			<version>${antlr.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>apache-jena-libs</artifactId>
			<type>pom</type>
			<version>3.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.6.1</version>
		</dependency>
		<!-- Testing Dependencies -->
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- April 2018: The following dependencies added as a response to a bug in Eclipse Oxygen.2 and Oxygen.3 according to https://stackoverflow.com/a/47101722/3358488 -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.junit.jupiter</groupId>-->
<!--			<artifactId>junit-jupiter-engine</artifactId>-->
<!--			<version>${junit.version}</version>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.junit.platform</groupId>-->
<!--			<artifactId>junit-platform-launcher</artifactId>-->
<!--			<version>1.1.0</version>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->
		<!-- Runtime Dependencies -->
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-reflect</artifactId>
			<version>${kotlin.version}</version>
			<scope>runtime</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>

  			<plugin>
        		<!-- As suggested by http://stackoverflow.com/questions/18956606/eclipse-maven-jar-plugin-not-signing-because-of-duplicate-entries-pom-xml-and-p -->
	 			<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
	 			<configuration>
		 			<archive>
			 			<addMavenDescriptor>false</addMavenDescriptor>
		 			</archive>
	 			</configuration>
 			</plugin>

 			<plugin>
				<groupId>org.antlr</groupId>
				<artifactId>antlr4-maven-plugin</artifactId>
				<version>${antlr.version}</version>
				<configuration>
					<outputDirectory>target/generated-sources/antlr4</outputDirectory>
					<sourceDirectory>src/main/antlr4</sourceDirectory>
					<visitor>true</visitor>
					<listener>false</listener>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>antlr4</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-sources/antlr4</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
			    <artifactId>kotlin-maven-plugin</artifactId>
			    <groupId>org.jetbrains.kotlin</groupId>
			    <version>${kotlin.version}</version>
			    <executions>
			        <execution>
			            <id>compile</id>
			            <goals>
			                <goal>compile</goal>
			            </goals>
			            <configuration>
			                <sourceDirs>
			                    <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
			                    <sourceDir>${project.basedir}/src/main/java</sourceDir>
			                </sourceDirs>
			            </configuration>
			        </execution>
			        <execution>
			            <id>test-compile</id>
			            <goals>
			                <goal>test-compile</goal>
			            </goals>
			            <configuration>
			                <sourceDirs>
			                    <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
			                    <sourceDir>${project.basedir}/src/test/java</sourceDir>
			                </sourceDirs>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<fork>true</fork>
					<source>${target.jdk.version}</source>
					<target>${target.jdk.version}</target>
					<debug>true</debug>
					<encoding>${project.build.sourceEncoding}</encoding>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<compilerArgument>-Xlint:all</compilerArgument>
				</configuration>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>default-testCompile</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>java-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>java-test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M3</version>
				<configuration>
					<!--<skipTests>${skipUnitTests}</skipTests>-->
					<testFailureIgnore>false</testFailureIgnore>
					<forkCount>0.5C</forkCount>
					<reuseForks>true</reuseForks>
					<argLine>-Xms256m -Xmx8G</argLine>
					<!-- The flag Xmx specifies the maximum memory allocation pool for a Java virtual machine (JVM), while Xms specifies the initial memory allocation pool.-->
					<reportFormat>plain</reportFormat>
					<trimStackTrace>false</trimStackTrace>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
				</configuration>
			</plugin>

			<plugin>
      			<groupId>org.apache.maven.plugins</groupId>
      			<artifactId>maven-javadoc-plugin</artifactId>
      			<version>3.1.0</version>
      			<configuration>
      				<failOnError>false</failOnError>
        			<!--<additionalparam>-Xdoclint:none</additionalparam>-->
      			</configuration>
    		</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.13</version>
				<configuration>
					<argLine>-Xms256m -Xmx8G</argLine>
					<!-- The flag Xmx specifies the maximum memory allocation pool for a Java virtual machine (JVM), while Xms specifies the initial memory allocation pool.-->
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<archive>
								<manifest>
									<mainClass>com.sri.ai.praise.other.application.praise.app.PRAiSE</mainClass>
								</manifest>
							</archive>
			                <finalName>PRAiSE-GUI-${version}</finalName>
						</configuration>
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
					<execution>
						<id>make-command-line-PRAiSE</id> <!-- this is used for inheritance merges -->
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<archive>
								<manifest>
									<mainClass>com.sri.ai.praise.other.application.praise.commandline.PRAiSE</mainClass>
								</manifest>
							</archive>
			                <finalName>PRAiSE-${version}</finalName>
						</configuration>
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
					<execution>
						<id>make-command-line-evaluator</id> <!-- this is used for inheritance merges -->
						<!-- TODO: currently not working as an executable jar if one wishes to use the SGSolver (regular PRAiSE solver) because evaluator uses ProcessBuilder to run SGSolver as a separate process, but when running evaluator as a jar, the classpath is the jar itself and it does not contain the PRAiSE class used by SGSolver. We need to figure out how to include the PRAiSE class in the evaluator jar -->
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<archive>
								<manifest>
									<mainClass>com.sri.ai.praise.other.application.empiricalevaluationapplication.fromfile.EvaluationApplication</mainClass>
								</manifest>
							</archive>
			                <finalName>PRAiSE-Evaluate-${version}</finalName>
						</configuration>
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.3</version>
                <configuration>
                    <mainClass>com.sri.ai.praise.other.application.praise.app.PRAiSE</mainClass>
                </configuration>
            </plugin>
		</plugins>

		<!-- This is workaround for the "maven-enforcer-plugin (goal "enforce")
			is ignored by m2e." warning in Eclipse and ANTLR4 -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.antlr</groupId>
										<artifactId>antlr4-maven-plugin</artifactId>
										<versionRange>${antlr.version}</versionRange>
										<goals>
											<goal>antlr4</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute></execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
